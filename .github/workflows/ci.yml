# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build and Test
on:
  push:
    paths-ignore: ['docs/**', '**.rst', '**.md']
  pull_request:
    paths-ignore: ['docs/**', '**.rst', '**.md']
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * 1'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12"]
        name: [""]
        include:
          - os: ubuntu-latest
            python-version: "3.11"
            test-mpi: true
          - os: ubuntu-latest
            python-version: "3.10"
          - os: ubuntu-latest
            python-version: "3.12"
            pip-pre: "--pre"  # Installs pre-release versions of pip dependencies
            name: "Pre-release dependencies"
          - os: ubuntu-latest
            python-version: "3.13"

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - run: pip install uv
    - name: Install dependencies
      run: |
        uv pip install .[dev,cov] --system ${{ matrix.pip-pre }}
    - name: Install MPI and mpi4py
      if: matrix.test-mpi == true
      run: |
        sudo apt-get update
        sudo apt-get install -y libopenmpi-dev
        uv pip install mpi4py --system
    - name: Test with Pytest
      timeout-minutes: 15
      run:
        pytest --ignore=./test/test_connectors -v --cov=ema_workbench/em_framework --cov=ema_workbench/util --cov=ema_workbench/analysis
    - name: Coveralls
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: coveralls --service=github


  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - run: pip install flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
